type Query{
    getAllMovie: [Movie]
    getReviewsByMovie(MovieID: ID!): [Review]
    getMovieReviews(MovieID:ID!): [Review]
    getGenreById(GenreID:ID!): Genre
}

input UserInput {
    Email: String!
    Password: String!
}


type Mutation {
    signUpUser(newUser:UserInput!): User
    addMovie(MovieName:String!,Description:String!,Genre:String!): Movie
    addReview(MovieId:ID!,Rating: Int!,Comment:String!): Review
    loginUser(userData:UserInput!): Token
}

# This is the authentication token produced by JWT
type Token{
    token: String!
}


type User {
  id: ID!
  Eamil: String!
  Passsword: String!
}

type Movie {
    id: ID!
    MovieName: String!
    Description: String!
    ReleaseDate: String!
    Genre: [Genre]
    Review: [Review]
}

type Genre {
    id: ID!
    GenreName: String!
}

type Review {
    id: ID!
    Rating: Int!
    Comment: String!
}